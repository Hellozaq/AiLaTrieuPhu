/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.view;

import org.example.model.PlayAudioURL;
import org.example.model.PlayerModel;
import org.example.network.GameClient;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author Ngọc Viên
 */
public class ModeSelectionFrame extends javax.swing.JFrame {

    /**
     * Creates new form ModeSelectionFrame1
     */
    public ModeSelectionFrame(PlayerModel player) {
        this.player = player;

        setTitle("Ai Là Triệu Phú - Trang Chủ");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(700, 500);
        setLocationRelativeTo(null);
        setResizable(false);

        initComponents();
        loadPlayerData();
        addListeners();

//        PlayAudioURL.playAudio(getClass().getResource("/audio/nhạc-bắt-đầu-chương-trình-ALTP-_2008-2020_.wav"), -10);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoLabel = new javax.swing.JLabel();
        moneyValueLabel = new javax.swing.JLabel();
        setAvatarButon = new javax.swing.JButton();
        avatarLabel = new javax.swing.JLabel();
        scoreLabel1 = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        unameAndAvtLabel = new javax.swing.JLabel();
        offlineButton = new javax.swing.JButton();
        onlineButton = new javax.swing.JButton();
        quitRectangle = new javax.swing.JLabel();
        playRectangle = new javax.swing.JLabel();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/AiLaTrieuPhu.png"))); // NOI18N
        getContentPane().add(logoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        moneyValueLabel.setFont(new java.awt.Font("Calibri", 3, 16)); // NOI18N
        moneyValueLabel.setForeground(new java.awt.Color(255, 255, 255));
        moneyValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        moneyValueLabel.setText("0");
        getContentPane().add(moneyValueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(577, 33, 90, 30));
        getContentPane().add(setAvatarButon, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 30, 30));

        avatarLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/avatar/1.png"))); // NOI18N
        getContentPane().add(avatarLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 31, -1, -1));

        scoreLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/TongThuong.png"))); // NOI18N
        getContentPane().add(scoreLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 20, -1, -1));

        usernameLabel.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        usernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        usernameLabel.setText("ngocvien");
        getContentPane().add(usernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 34, 100, -1));

        unameAndAvtLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/uname and avt.png"))); // NOI18N
        getContentPane().add(unameAndAvtLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 27, -1, -1));

        offlineButton.setBackground(new java.awt.Color(0, 42, 93));
        offlineButton.setFont(new java.awt.Font("Eras Bold ITC", 1, 14)); // NOI18N
        offlineButton.setForeground(new java.awt.Color(255, 255, 255));
        offlineButton.setText("PLAY NOW");
        getContentPane().add(offlineButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(478, 214, 128, -1));

        onlineButton.setBackground(new java.awt.Color(0, 42, 93));
        onlineButton.setFont(new java.awt.Font("Eras Bold ITC", 1, 14)); // NOI18N
        onlineButton.setForeground(new java.awt.Color(255, 255, 255));
        onlineButton.setText("1 VS 1");
        onlineButton.setToolTipText("");
        onlineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onlineButtonActionPerformed(evt);
            }
        });
        getContentPane().add(onlineButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 263, 105, 24));

        quitRectangle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/Rectangle 2.png"))); // NOI18N
        getContentPane().add(quitRectangle, new org.netbeans.lib.awtextra.AbsoluteConstraints(485, 260, -1, -1));

        playRectangle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/Rectangle 4.png"))); // NOI18N
        getContentPane().add(playRectangle, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 210, -1, -1));

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/Background 1.png"))); // NOI18N
        getContentPane().add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onlineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onlineButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_onlineButtonActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ModeSelectionFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ModeSelectionFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ModeSelectionFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ModeSelectionFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ModeSelectionFrame1().setVisible(true);
//            }
//        });
//    }

    private void loadPlayerData() {
        if (player != null) {
            usernameLabel.setText(player.getUsername());

            // ---- ĐIỀU CHỈNH Ở ĐÂY ----
            // Chọn hiển thị rankScore hay score
            // Giả sử bạn muốn hiển thị rankScore làm "Tiền"
            moneyValueLabel.setText(String.valueOf(player.getRankScore()));
            // Nếu muốn hiển thị score, dùng:
            // moneyValueLabel.setText(String.valueOf(player.getScore()));

            String avatarPath = player.getAvatarPath();
            if (avatarPath != null && !avatarPath.isEmpty()) {
                try {
                    avatarLabel.setIcon(new ImageIcon(getClass().getResource("/avatar/" + avatarPath + ".png")));
                } catch (Exception e) {
                    System.err.println("Không tìm thấy avatar: " + avatarPath + ". " + e.getMessage());
                    avatarLabel.setIcon(new ImageIcon(getClass().getResource("/avatar/default.png")));
                }
            } else {
                avatarLabel.setIcon(new ImageIcon(getClass().getResource("/avatar/default.png")));
            }
        }
    }

    private void addListeners() {
        offlineButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                PlayAudioURL.playClickAudio();
//                PlayAudioURL.stopAllAudio();
                if (player.getAvatarPath() == null || player.getAvatarPath().isEmpty()) {
                    JOptionPane.showMessageDialog(ModeSelectionFrame.this,
                            "Vui lòng chọn avatar trước khi bắt đầu chơi!",
                            "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    SelectAvatarFrame.display(player, 1, avatarLabel);
                } else {
                    GameFrame.display(player);
                    dispose();
                }
            }
        });

        onlineButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                PlayAudioURL.playClickAudio();
                if (player.getAvatarPath() == null || player.getAvatarPath().isEmpty()) {
                    JOptionPane.showMessageDialog(ModeSelectionFrame.this,
                            "Vui lòng chọn avatar trước khi bắt đầu chơi online!",
                            "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    SelectAvatarFrame.display(player, 1, avatarLabel); // Chế độ 1 là chọn lần đầu
                    return;
                }

                // Khởi tạo và kết nối GameClient
                // Lấy host và port từ một file config hoặc hardcode tạm thời
                String serverHost = "localhost"; // Hoặc địa chỉ IP của server
                int serverPort = 12345;       // Phải khớp với PORT của Server

                gameClient = new GameClient(serverHost, serverPort);
                boolean connected = gameClient.connect(player); // Truyền PlayerModel hiện tại

                if (connected) {
//                    PlayAudioURL.stopAllAudio(); // Dừng nhạc nền của ModeSelectionFrame
                    LobbyFrame.display(player, gameClient); // Mở LobbyFrame và truyền player, gameClient
                    dispose(); // Đóng ModeSelectionFrame
                } else {
                    // Xử lý lỗi kết nối, ví dụ hiển thị JOptionPane
                    JOptionPane.showMessageDialog(ModeSelectionFrame.this,
                            "Không thể kết nối đến máy chủ game online.\nVui lòng thử lại sau hoặc kiểm tra kết nối mạng.",
                            "Lỗi Kết Nối", JOptionPane.ERROR_MESSAGE);
                    gameClient = null; // Reset gameClient nếu kết nối thất bại
                }
            }
        });

        avatarLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PlayAudioURL.playPopOnAudio();
                SelectAvatarFrame.display(player, 2, avatarLabel);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                avatarLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                avatarLabel.setCursor(Cursor.getDefaultCursor());
            }
        });

        offlineButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                offlineButton.setBackground(new Color(0, 153, 255));
                PlayAudioURL.playAudio(getClass().getResource("/audio/pop-3-269281.wav"));
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                offlineButton.setBackground(new Color(0, 122, 204));
            }
        });

        onlineButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                onlineButton.setBackground(new Color(255, 128, 51));
                PlayAudioURL.playAudio(getClass().getResource("/audio/pop-3-269281.wav"));
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                onlineButton.setBackground(new Color(255, 102, 0));
            }
        });
    }

    public static void display(PlayerModel player) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                        if ("Nimbus".equals(info.getName())) {
                            UIManager.setLookAndFeel(info.getClassName());
                            break;
                        }
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                new ModeSelectionFrame(player).setVisible(true);
            }
        });
    }

    private PlayerModel player;
    private GameClient gameClient;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avatarLabel;
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel moneyValueLabel;
    private javax.swing.JButton offlineButton;
    private javax.swing.JButton onlineButton;
    private javax.swing.JLabel playRectangle;
    private javax.swing.JLabel quitRectangle;
    private javax.swing.JLabel scoreLabel1;
    private javax.swing.JButton setAvatarButon;
    private javax.swing.JLabel unameAndAvtLabel;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
