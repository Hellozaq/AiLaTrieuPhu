/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.view;

import org.example.controllers.QuestionController;
import org.example.model.PlayAudio;
import org.example.model.PlayAudioURL;
import org.example.model.PlayerModel;
import org.example.model.QuestionModel;
import org.example.service.PlayerService;
import org.example.view.helpCall.HelpCallFrame;

import javax.sound.sampled.Clip;
import javax.swing.*;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

/**
 * @author Ngọc Viên
 */
public class GameFrame extends javax.swing.JFrame {

    /**
     * Creates new form GameFrame
     */
    public GameFrame(PlayerModel player) {
        playerService = new PlayerService();
        this.player = player;
        initComponents();
        setResizable(false);
        setLocation(320, 140);
//        PlayAudio.playAudio("src/main/java/org/example/file/audio/bat dau di tim ai la trieu phu.wav", -5);
        PlayAudioURL.playAudio(getClass().getResource("/audio/bat dau di tim ai la trieu phu.wav"),-5);
        fisrtEvenHandler();
        disableButtons();
        new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                Thread.sleep(5000);
                return null;
            }


            @Override
            protected void done() {
                setEableButon();
                try {
                    evenHandler();
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }

            }

        }.execute();


//        setQuesAndAnswer(new QuestionModel(1, "What is the capital of France?", "Berlin", "Madrid", "Paris", "Rome", 3));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setAvatarButon = new javax.swing.JButton();
        avatarLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        unameAndAvtLabel = new javax.swing.JLabel();
        stopButon = new javax.swing.JButton();
        stopLabel = new javax.swing.JLabel();
        x3 = new javax.swing.JLabel();
        x2 = new javax.swing.JLabel();
        x1 = new javax.swing.JLabel();
        helpYKienKhanGIaButon = new javax.swing.JButton();
        helpCallButon = new javax.swing.JButton();
        help5050Buton = new javax.swing.JButton();
        helpYKienKhanGIaLabel = new javax.swing.JLabel();
        helpCallLabel = new javax.swing.JLabel();
        help5050Label = new javax.swing.JLabel();
        moneyLabel = new javax.swing.JLabel();
        questionCurrentIndexLabel = new javax.swing.JLabel();
        scoreLabel = new javax.swing.JLabel();
        bButon = new javax.swing.JButton();
        dButon = new javax.swing.JButton();
        aButon = new javax.swing.JButton();
        cButon = new javax.swing.JButton();
        aiLaTrieuPhuText = new javax.swing.JLabel();
        questionLabel = new javax.swing.JLabel();
        questionAndAnswerLable = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        laiVanSam = new javax.swing.JLabel();
        moneyShowLabel = new javax.swing.JLabel();
        backgroundLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        quitItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(setAvatarButon, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 20, 30, 30));

        avatarLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/avatar/1.png"))); // NOI18N
        getContentPane().add(avatarLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 21, -1, -1));

        usernameLabel.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        usernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        usernameLabel.setText("ngocvien");
        getContentPane().add(usernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 24, 100, -1));

        unameAndAvtLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/uname and avt.png"))); // NOI18N
        getContentPane().add(unameAndAvtLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 17, -1, -1));

        stopButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButonActionPerformed(evt);
            }
        });
        getContentPane().add(stopButon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 67, 25));

        stopLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/stopButon.png"))); // NOI18N
        getContentPane().add(stopLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        x3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/X.png"))); // NOI18N
        getContentPane().add(x3, new org.netbeans.lib.awtextra.AbsoluteConstraints(702, 74, -1, -1));

        x2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/X.png"))); // NOI18N
        getContentPane().add(x2, new org.netbeans.lib.awtextra.AbsoluteConstraints(643, 74, -1, -1));

        x1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/X.png"))); // NOI18N
        getContentPane().add(x1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 74, -1, -1));
        getContentPane().add(helpYKienKhanGIaButon, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 78, 45, 29));
        getContentPane().add(helpCallButon, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 78, 45, 29));
        getContentPane().add(help5050Buton, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 78, 45, 29));

        helpYKienKhanGIaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/y kien khan gia.png"))); // NOI18N
        getContentPane().add(helpYKienKhanGIaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(696, 76, -1, -1));

        helpCallLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/goi dien nguoi than.png"))); // NOI18N
        getContentPane().add(helpCallLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(636, 76, -1, -1));

        help5050Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/50-50.png"))); // NOI18N
        getContentPane().add(help5050Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(575, 76, -1, -1));

        moneyLabel.setFont(new java.awt.Font("Calibri", 3, 16)); // NOI18N
        moneyLabel.setForeground(new java.awt.Color(255, 255, 255));
        moneyLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        moneyLabel.setText("0");
        getContentPane().add(moneyLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(618, 23, 90, 30));

        questionCurrentIndexLabel.setFont(new java.awt.Font("Eras Bold ITC", 1, 15)); // NOI18N
        questionCurrentIndexLabel.setForeground(new java.awt.Color(10, 47, 104));
        getContentPane().add(questionCurrentIndexLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 252, -1, -1));

        scoreLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/TongThuong.png"))); // NOI18N
        getContentPane().add(scoreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        bButon.setBackground(new java.awt.Color(247, 248, 211));
        bButon.setText(" ");
        bButon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bButon.setMaximumSize(new java.awt.Dimension(45, 20));
        bButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bButonActionPerformed(evt);
            }
        });
        getContentPane().add(bButon, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 370, 241, 54));

        dButon.setBackground(new java.awt.Color(247, 248, 211));
        dButon.setText(" ");
        dButon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        dButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dButonActionPerformed(evt);
            }
        });
        getContentPane().add(dButon, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 443, 241, 54));

        aButon.setBackground(new java.awt.Color(247, 248, 211));
        aButon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        aButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aButonActionPerformed(evt);
            }
        });
        getContentPane().add(aButon, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 370, 241, 54));

        cButon.setBackground(new java.awt.Color(247, 248, 211));
        cButon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cButonActionPerformed(evt);
            }
        });
        getContentPane().add(cButon, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 443, 241, 54));

        aiLaTrieuPhuText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/AiLaTrieuPhu.png"))); // NOI18N
        getContentPane().add(aiLaTrieuPhuText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, -1, -1));

        questionLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        questionLabel.setForeground(new java.awt.Color(255, 255, 255));
        questionLabel.setText("BẮT ĐẦU ĐI TÌM \"AI LÀ TRIỆU PHÚ\"");
        getContentPane().add(questionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 289, 500, 40));

        questionAndAnswerLable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/Question and Answer.png"))); // NOI18N
        getContentPane().add(questionAndAnswerLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 271, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/Câu số_.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 247, -1, -1));

        laiVanSam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/laivansam.png"))); // NOI18N
        getContentPane().add(laiVanSam, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, -1, -1));

        moneyShowLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elements/Money.png"))); // NOI18N
        getContentPane().add(moneyShowLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 90, -1, -1));

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/Background 1.png"))); // NOI18N
        getContentPane().add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 540));

        jMenuBar1.setBackground(new java.awt.Color(132, 210, 255));

        jMenu1.setText("File");

        quitItem.setText("Quit");
        quitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitItemActionPerformed(evt);
            }
        });
        jMenu1.add(quitItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dButonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dButonActionPerformed

    private void bButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bButonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bButonActionPerformed

    private void aButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aButonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aButonActionPerformed

    private void cButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cButonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cButonActionPerformed

    private void quitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quitItemActionPerformed

    private void stopButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stopButonActionPerformed

//    /**
//     * @param  the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GameFrame().setVisible(true);
//            }
//        });
//    }
    public static void display(PlayerModel player) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameFrame(player).setVisible(true);
            }
        });
    }

    static void makeButtonTransparent(JButton button) {
        button.setContentAreaFilled(false);
        button.setOpaque(false);
    }

    private void fisrtEvenHandler() {
        setDefaultCloseOperation(0);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                int response = JOptionPane.showConfirmDialog(null,
                        "Bạn có chắc chắn muốn thoát?", "Thông báo", JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
                if (response == JOptionPane.YES_OPTION) {
                    PlayAudioURL.stopAudio(question1to5Audio);
                    dispose();
                }
            }
        });
        //hien username va avatar
        usernameLabel.setText(player.getUsername());
        avatarLabel.setIcon(new ImageIcon(getClass().getResource("/avatar/"+player.getAvatarPath()+".png")));

        //ẩn các dấu X
        x1.setVisible(false);
        x2.setVisible(false);
        x3.setVisible(false);


        //trong suot buton
        makeButtonTransparent(setAvatarButon);
        makeButtonTransparent(stopButon);
        makeButtonTransparent(helpCallButon);
        makeButtonTransparent(help5050Buton);
        makeButtonTransparent(helpYKienKhanGIaButon);


    }

    private void evenHandler() throws SQLException {

        disableCallCalled=false;
        disableKhanGiaCalled=false;
        disable5050Called=false;
        setEableButon();


//        question1to5Audio = PlayAudio.playStartAudio("src/main/resources/audio/question1to5.wav", -10);
        question1to5Audio = PlayAudioURL.playStartAudio(getClass().getResource("/audio/question1to5.wav"), -10);
        aButon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        bButon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        cButon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        dButon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        setAvatarButon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        help5050Buton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        helpCallButon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        helpYKienKhanGIaButon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        stopButon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));

        //phát âm thanh khi di chuyển chuột đến
        stopButon.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
//                PlayAudio.playAudio("src/main/java/org/example/file/audio/butonTouch.wav", -4);
                PlayAudioURL.playAudio(getClass().getResource("/audio/butonTouch.wav"),-4);
            }
        });
        helpYKienKhanGIaButon.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (disableKhanGiaCalled)
                    PlayAudioURL.wrongSound();
                else
//                    PlayAudio.playAudio("src/main/java/org/example/file/audio/butonTouch.wav", -4);
                    PlayAudioURL.playAudio(getClass().getResource("/audio/butonTouch.wav"),-4);
            }
        });
        helpCallButon.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (disableCallCalled)
                    PlayAudioURL.wrongSound();
                else
//                    PlayAudio.playAudio("src/main/java/org/example/file/audio/butonTouch.wav", -4);
                    PlayAudioURL.playAudio(getClass().getResource("/audio/butonTouch.wav"),-4);
            }
        });
        help5050Buton.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                if (disable5050Called)
                    PlayAudioURL.wrongSound();
                else
                    PlayAudioURL.playAudio(getClass().getResource("/audio/butonTouch.wav"),-4);
            }
        });
        aButon.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PlayAudioURL.playAudio(getClass().getResource("/audio/butonTouch2.wav"),-5);
            }
        });
        bButon.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PlayAudioURL.playAudio(getClass().getResource("/audio/butonTouch2.wav"),-5);
            }
        });
        cButon.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PlayAudioURL.playAudio(getClass().getResource("/audio/butonTouch2.wav"),-5);
            }
        });
        dButon.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PlayAudioURL.playAudio(getClass().getResource("/audio/butonTouch2.wav"),-5);
            }
        });


        questionController = new QuestionController();
        questionCurrentIndex = 0;
        scoreLevel = new int[]{100000, 200000, 300000, 500000, 1000000, 2000000, 4000000, 6000000, 8000000, 12000000,
                16000000, 32000000, 40000000, 56000000, 100000000};
        moneyLevel = new String[]{"100.000", "200.000", "300.000", "500.000", "1 TRIỆU", "2 TRIỆU",
                "4 TRIỆU", "6 TRIỆU", "8 TRIỆU", "12 TRIỆU", "16 TRIỆU", "32 TRIỆU", "40 TRIỆU", "56 TRIỆU", "100 TRIỆU"};
        money = "0";
        questionModel = questionController.getQuestions().get(questionCurrentIndex);
        answerRight = questionModel.getCorrectAnswer();


        setQuesAndAnswer(questionModel);
        //addActionListener
        aButon.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                curAnswer = 1;
                PlayAudioURL.playClickAudio();
                checkAnsAndConfirm();
            }
        });
        bButon.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                curAnswer = 2;
                PlayAudioURL.playClickAudio();
                checkAnsAndConfirm();
            }
        });
        cButon.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                curAnswer = 3;
                PlayAudioURL.playClickAudio();
                checkAnsAndConfirm();
            }
        });
        dButon.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                curAnswer = 4;
                PlayAudioURL.playClickAudio();
                checkAnsAndConfirm();


            }
        });
        setAvatarButon.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                PlayAudioURL.playPopOnAudio();
                SelectAvatarFrame.display(player, 2, avatarLabel);
//                avatarLabel.setIcon(new ImageIcon(player.getAvatarPath()));
            }
        });

        //helpsButon
        help5050Buton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                PlayAudioURL.playClickAudio();
                int response = JOptionPane.showConfirmDialog(null,
                        "Bạn có chắc muốn sử dụng sự trợ giúp 50-50 không?",
                        "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (response == JOptionPane.YES_OPTION) {
                    disable5050();
                    PlayAudioURL.playAudio(getClass().getResource("/audio/level-up-191997.wav"));
//                    JOptionPane.showMessageDialog(null,"Bạn đã chọn sự trợ giúp 50-50!");
                    switch (answerRight) {
                        case 1: {
                            bButon.setText("");
                            cButon.setText("");
                            break;
                        }
                        case 2: {
                            cButon.setText("");
                            dButon.setText("");
                            break;
                        }
                        case 3: {
                            dButon.setText("");
                            aButon.setText("");
                            break;
                        }
                        case 4: {
                            aButon.setText("");
                            bButon.setText("");
                            break;
                        }
                    }
                }
            }
        });
        helpCallButon.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                PlayAudioURL.playClickAudio();

                disableButtons();
                HelpCallFrame.display(questionModel);
//                    JOptionPane.showMessageDialog(null, "Bạn đã chọn sự trợ giúp GỌI ĐIỆN CHO NGƯỜI THÂN!");

            }
        });
        helpYKienKhanGIaButon.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                PlayAudioURL.playClickAudio();
                int response = JOptionPane.showConfirmDialog(null,
                        "Bạn có chắc muốn sử dụng sự trợ giúp HỎI Ý KIẾN KHÁN GIẢ không?",
                        "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (response == JOptionPane.YES_OPTION) {
                    disableKhanGia();
                    PlayAudioURL.playPopOnAudio();
//                    JOptionPane.showMessageDialog(null,"Bạn đã chọn sự trợ giúp HỎI Ý KIẾN KHÁN GIẢ!");
                    switch (answerRight) {
                        case 1: {
                            JOptionPane.showMessageDialog(null, null,
                                    "Hỏi ý kiến khán giả", JOptionPane.INFORMATION_MESSAGE,
                                    new ImageIcon(getClass().getResource("/elements/Ý kiến khán giả (A).png")));
//                            YKienAFrame.display();
                            break;
                        }
                        case 2: {
                            JOptionPane.showMessageDialog(null, null,
                                    "Hỏi ý kiến khán giả", JOptionPane.INFORMATION_MESSAGE,
                                    new ImageIcon(getClass().getResource("/elements/Ý kiến khán giả (B).png")));
//                            YKienBFrame.display();
                            break;
                        }
                        case 3: {
                            JOptionPane.showMessageDialog(null, null,
                                    "Hỏi ý kiến khán giả", JOptionPane.INFORMATION_MESSAGE,
                                    new ImageIcon(getClass().getResource("/elements/Ý kiến khán giả (C).png")));
//                            YKienCFrame.display();
                            break;
                        }
                        case 4: {
                            JOptionPane.showMessageDialog(null, null,
                                    "Hỏi ý kiến khán giả", JOptionPane.INFORMATION_MESSAGE,
                                    new ImageIcon(getClass().getResource("/elements/Ý kiến khán giả (D).png")));
//                            YKienDFrame.display();
                            break;
                        }
                    }
                }
            }
        });

        stopButon.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                int response = JOptionPane.showConfirmDialog(null,
                        "Bạn có chắc chắn muốn dừng lại?", "Thông báo",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (response == JOptionPane.YES_OPTION) {
                    if (questionCurrentIndex == 0) {
                        score = 0;
                    } else {
                        score = scoreLevel[questionCurrentIndex - 1];
                        player.setScore(score);
                        try {
                            playerService.updateMaxScore(player, score);
                        } catch (SQLException ex) {
                            throw new RuntimeException(ex);
                        }
                    }
                    PlayAudioURL.stopAudio(question1to5Audio);
                    dispose();
                    WelcomeFrame.display();
                }
            }
        });

        quitItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                int response = JOptionPane.showConfirmDialog(null,
                        "Bạn có chắc chắn muốn thoát?", "Thông báo", JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
                if (response == JOptionPane.YES_OPTION) {
                    PlayAudioURL.stopAudio(question1to5Audio);
                    dispose();
                }
            }
        });

    }

    private void checkAnsAndConfirm() {

        int confirm = JOptionPane.showConfirmDialog(null,
                "Đây có phải là đáp án của cùng của bạn?", "Xác nhận",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (confirm == JOptionPane.YES_OPTION) {
            if (questionCurrentIndex == 4 || questionCurrentIndex == 9 || questionCurrentIndex == 14) {
                PlayAudioURL.stopAudio(question1to5Audio);
//                PlayAudio.playAudio("src/main/java/org/example/file/audio/cau tra loi cuoi cung.wav");
                PlayAudioURL.playAudio(getClass().getResource("/audio/cau tra loi cuoi cung.wav"));
                disableButtons();
                Timer timer = new Timer(3800, new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        setEableButon();
                        checkAns();
                    }
                });
                timer.setRepeats(false);
                timer.start();
            } else checkAns();
        }
    }

    private void nextQuestion() {
        questionCurrentIndex++;
        if (questionCurrentIndex == questionController.getQuestions().size()) {
            money = moneyLevel[questionCurrentIndex - 1];
            score = scoreLevel[questionCurrentIndex - 1];
            try {
                playerService.updateMaxScore(player, score);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
            disableButtons();
            questionCurrentIndexLabel.setText("");
            aButon.setText("");
            bButon.setText("");
            cButon.setText("");
            dButon.setText("");
            PlayAudioURL.stopAudio(question1to5Audio);
        }
        if (questionCurrentIndex < 15) {
            questionModel = questionController.getQuestions().get(questionCurrentIndex);
            setQuesAndAnswer(questionModel);
            answerRight = questionModel.getCorrectAnswer();
        }
    }

    private void checkAns() {

        if (curAnswer == answerRight) {
            money = moneyLevel[questionCurrentIndex];
            //khi câu 5,10 đúng
            if (questionCurrentIndex == 4 || questionCurrentIndex == 9 || questionCurrentIndex == 14) {
                moneyLabel.setText(String.valueOf(money));
//                PlayAudio.playAudio("src/main/java/org/example/file/audio/cau5dung.wav");
                PlayAudioURL.playAudio(getClass().getResource("/audio/cau5dung.wav"));
                if (questionCurrentIndex != 14) {
                    questionLabel.setText("Bạn đã vược qua câu " + (questionCurrentIndex + 1) + ", số tiền bây giờ của bạn là " + money +
                            " VND");
                } else questionLabel.setText("Chúc mừng bạn đã chiến thắng với 100 TRIỆU ĐỒNG!!!");
                questionCurrentIndexLabel.setText("");
                aButon.setText("");
                bButon.setText("");
                cButon.setText("");
                dButon.setText("");
                disableButtons();
                Timer timer = new Timer(6900, new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        setEableButon();
                        nextQuestion();
//                        PlayAudio.playAudio("src/main/java/org/example/file/audio/bat dau di tim ai la trieu phu.wav");
                        PlayAudioURL.playAudio(getClass().getResource("/audio/bat dau di tim ai la trieu phu.wav"));
                        Timer timer1 = new Timer(4400, new ActionListener() {
                            public void actionPerformed(ActionEvent e) {
//                                question1to5Audio = PlayAudio.playStartAudio("src/main/java/org/example/file/audio/question1to5.wav", -15);
                                question1to5Audio = PlayAudioURL.playStartAudio(getClass().getResource("/audio/question1to5.wav"),-15);
                            }
                        });
                        timer1.setRepeats(false);
                        timer1.start();
                    }
                });
                timer.setRepeats(false);
                timer.start();
            } else {
//                PlayAudio.playAudio("src/main/java/org/example/file/audio/cau1-4dung.wav");
                PlayAudioURL.playAudio(getClass().getResource("/audio/cau1-4dung.wav"));
                disableButtons();
                Timer timer = new Timer(500, new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        setEableButon();
                        nextQuestion();
                    }
                });
                timer.setRepeats(false);
                timer.start();
            }

        } else {
            if (questionCurrentIndex < 4) {
                money = "0";
                score = 0;
            }
            if (questionCurrentIndex > 4 && questionCurrentIndex < 9) {
                money = moneyLevel[4];
                score = scoreLevel[4];
            } else if (questionCurrentIndex > 9) {
                money = moneyLevel[9];
                score = scoreLevel[9];
            }
            moneyLabel.setText(String.valueOf(money));
            //luu diem
            try {
                playerService.updateMaxScore(player, score);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
            if (questionCurrentIndex != 15) {
//                PlayAudio.playAudio("src/main/java/org/example/file/audio/cau1-5sai.wav");
                PlayAudioURL.playAudio(getClass().getResource("/audio/cau1-5sai.wav"));
                PlayAudioURL.stopAudio(question1to5Audio);
            }

            int response = JOptionPane.showConfirmDialog(null,
                    "Bạn đã sai, đáp án là " + answerRightChar[answerRight - 1] + ". Bạn có muốn chơi lại không?",
                    "chơi lại", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            answerRight = questionController.getQuestions().get(0).getCorrectAnswer();//đặt lại đáp án đúng
            if (response == JOptionPane.YES_OPTION) {
                PlayAudioURL.stopAudio(question1to5Audio);
                score = 0;
                disableCallCalled = false;
                disable5050Called = false;
                disableKhanGiaCalled = false;
                dispose();
                display(player);
            } else {
                dispose();
                WelcomeFrame.display();
            }
        }
        if (questionCurrentIndex == 4 || questionCurrentIndex == 9) {
            PlayAudioURL.stopAudio(question1to5Audio);
        }
    }

    private void setQuesAndAnswer(QuestionModel question) {
        moneyLabel.setText(money);
        questionLabel.setText(question.getQuestion());
        aButon.setText("A. " + question.getOptionA());
        bButon.setText("B. " + question.getOptionB());
        cButon.setText("C. " + question.getOptionC());
        dButon.setText("D. " + question.getOptionD());
        questionCurrentIndexLabel.setText(String.valueOf(questionCurrentIndex + 1));
    }

    public static void disable5050() {
        help5050Buton.setEnabled(false);
        x1.setVisible(true);
        disable5050Called = true;
    }

    public static void disableCall() {
        helpCallButon.setEnabled(false);
        x2.setVisible(true);
        disableCallCalled = true;
    }

    public static void disableKhanGia() {
        helpYKienKhanGIaButon.setEnabled(false);
        x3.setVisible(true);
        disableKhanGiaCalled = true;
    }

    private void disableButtons()// vô hiệu hóa chức năng của các nút
    {
        aButon.setEnabled(false);
        bButon.setEnabled(false);
        cButon.setEnabled(false);
        dButon.setEnabled(false);
        help5050Buton.setEnabled(false);
        helpCallButon.setEnabled(false);
        helpYKienKhanGIaButon.setEnabled(false);
    }

    public static void setEableButon()// mở lại chức năng
    {
        aButon.setEnabled(true);
        bButon.setEnabled(true);
        cButon.setEnabled(true);
        dButon.setEnabled(true);
        if (!disable5050Called)
            help5050Buton.setEnabled(true);
        if (!disableCallCalled)
            helpCallButon.setEnabled(true);
        if (!disableKhanGiaCalled)
            helpYKienKhanGIaButon.setEnabled(true);
    }

    private PlayerService playerService;
    private PlayerModel player;
    private static boolean disable5050Called = false;
    private static boolean disableCallCalled = false;
    private static boolean disableKhanGiaCalled = false;
    private QuestionModel questionModel;
    private Clip question1to5Audio = null;
    private int curAnswer = 0;
    private int answerRight;
    private char answerRightChar[] = {'A', 'B', 'C', 'D'};
    private int[] scoreLevel;
    private int score;
    private String[] moneyLevel;
    private String money;
    private QuestionController questionController;
    private int questionCurrentIndex;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton aButon;
    private javax.swing.JLabel aiLaTrieuPhuText;
    private javax.swing.JLabel avatarLabel;
    private static javax.swing.JButton bButon;
    private javax.swing.JLabel backgroundLabel;
    private static javax.swing.JButton cButon;
    private static javax.swing.JButton dButon;
    private static javax.swing.JButton help5050Buton;
    private javax.swing.JLabel help5050Label;
    private static javax.swing.JButton helpCallButon;
    private javax.swing.JLabel helpCallLabel;
    private static javax.swing.JButton helpYKienKhanGIaButon;
    private javax.swing.JLabel helpYKienKhanGIaLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel laiVanSam;
    private javax.swing.JLabel moneyLabel;
    private javax.swing.JLabel moneyShowLabel;
    private javax.swing.JLabel questionAndAnswerLable;
    private javax.swing.JLabel questionCurrentIndexLabel;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JMenuItem quitItem;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JButton setAvatarButon;
    private javax.swing.JButton stopButon;
    private javax.swing.JLabel stopLabel;
    private javax.swing.JLabel unameAndAvtLabel;
    private javax.swing.JLabel usernameLabel;
    private static javax.swing.JLabel x1;
    private static javax.swing.JLabel x2;
    private static javax.swing.JLabel x3;
    // End of variables declaration//GEN-END:variables
}