/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.view.helpCall;

import org.example.model.PlayAudioURL;
import org.example.model.QuestionModel;
import org.example.view.GameFrame;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

import javax.sound.sampled.Clip;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author Ngọc Viên
 */
public class CallWithSO extends JFrame {

    /**
     * Creates new form CallWithJack
     */
    public CallWithSO(QuestionModel question,String name,int thoiGianNoiMay,URL audioPath,URL imagePath) {
        initComponents();
        this.question = question;
        this.name = name;
        this.thoiGianNoiMay = thoiGianNoiMay;
        this.audioPath = audioPath;
        this.imagePath = imagePath;

        evenHandler();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new JScrollPane();
        jTextArea = new JTextArea();
        bgLabel = new JLabel();

       // setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new AbsoluteLayout());

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane.setViewportView(jTextArea);

        getContentPane().add(jScrollPane, new AbsoluteConstraints(60, 110, 260, 380));

        bgLabel.setIcon(new ImageIcon(getClass().getResource("/background/khung chat voi Jack.png"))); // NOI18N
        getContentPane().add(bgLabel, new AbsoluteConstraints(-24, -18, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(CallWithSO.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            Logger.getLogger(CallWithSO.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            Logger.getLogger(CallWithSO.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (UnsupportedLookAndFeelException ex) {
//            Logger.getLogger(CallWithSO.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CallWithSO(question,name,thoiGianNoiMay,audioPath).setVisible(true);
//            }
//        });
//    }
    public static void display(QuestionModel question, String name, int thoiGianNoiMay, URL audioPath, URL imagePath) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CallWithSO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(CallWithSO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(CallWithSO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(CallWithSO.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CallWithSO(question,name,thoiGianNoiMay,audioPath,imagePath).setVisible(true);
            }
        });
    }

    private void evenHandler() {
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                GameFrame.setEableButon();
                dispose();
            }
        });
        Icon background= new ImageIcon(imagePath);
        bgLabel.setIcon(background);
        setTitle("Gọi điện cho anh "+name);
        setLocationRelativeTo(null);
        switch (question.getCorrectAnswer()){
            case 1:{
                answerRight="A "+question.getOptionA();
                break;
            }
            case 2:{
                answerRight="B "+question.getOptionB();
                break;
            }
            case 3:{
                answerRight="C "+question.getOptionC();
                break;
            }
            case 4:{
                answerRight="D "+question.getOptionD();
                break;
            }
        }
        // Đảm bảo JTextArea không chỉnh sửa được
        jTextArea.setEditable(false);
        jTextArea.setFont(new Font("Arial", Font.PLAIN, 14));
        jTextArea.setForeground(Color.BLACK); // Bạn có thể điều chỉnh màu sắc nếu cần

        // Các tin nhắn sẽ được hiển thị
        String[] messages = {
                "Bạn: alo anh "+name+" ơi!",
                name+": alo, gì đấy em",
                "Bạn: Em đang chơi Ai là triệu phú",
                "Bạn: Giúp em trả lời câu hỏi này với.",
                name+": Được thôi em.",
                "Bạn: Câu hỏi là ",
                "Bạn: "+question.getQuestion(),
                "Bạn: A là "+question.getOptionA(),
                "Bạn: B là "+question.getOptionB(),
                "Bạn: C là "+question.getOptionC(),
                "Bạn: D là "+question.getOptionD(),
                name+": Đợi một chút...","",
                name+": Đáp án là "+answerRight+" nha em \n siêu juan luôn!",
                "Bạn: Tuyệt quá cảm ơn anh "+name
        };

        // Tạo Timer đầu tiên để đợi 3 giây và hiển thị dấu ba chấm
        jTextArea.append("Đang nối máy đến "+name+"...\n");
        audio=PlayAudioURL.playStartAudio(audioPath,0);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                PlayAudioURL.stopAudio(audio);
                dispose();
            }
        });
        Timer initialTimer = new Timer(thoiGianNoiMay, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

                ((Timer) e.getSource()).stop(); // Dừng Timer đầu tiên
                jTextArea.setText("");

                // Tạo và thiết lập Timer để hiển thị các tin nhắn
                Timer messageTimer = new Timer(1000, new ActionListener() {
                    int messageIndex = 0; // Chỉ số của tin nhắn hiện tại

                    @Override
                    public void actionPerformed(ActionEvent e) {
                        if (messageIndex < messages.length) {
                            jTextArea.append(messages[messageIndex] + "\n");
                            messageIndex++;
                        } else {
                            ((Timer) e.getSource()).stop(); // Dừng Timer khi đã hiển thị hết tin nhắn
                            // Tạo Timer để tắt ứng dụng sau 8 giây
                            Timer exitTimer = new Timer(8000, new ActionListener() {
                                @Override
                                public void actionPerformed(ActionEvent e) {

                                    GameFrame.setEableButon();
                                    PlayAudioURL.stopAudio(audio);
                                    dispose();
                                }
                            });
                            exitTimer.setRepeats(false);//đảm bảo timer chỉ chạy 1 lần
                            exitTimer.start();
                        }
                    }
                });

                messageTimer.start(); // Bắt đầu Timer để hiển thị tin nhắn
            }
        });

        initialTimer.setRepeats(false); // Đảm bảo Timer đầu tiên chỉ chạy một lần
        initialTimer.start(); // Bắt đầu Timer đầu tiên
    }

    private Clip audio;
    private URL imagePath;
    private String answerRight;
    private QuestionModel question;
    private String name;
    private int thoiGianNoiMay;
    private URL audioPath;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel bgLabel;
    private JScrollPane jScrollPane;
    private JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}
